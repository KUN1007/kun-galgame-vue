{"version":3,"sources":["getFileType.js"],"names":["getFileNameAndExtension","mimeTypes","getFileType","file","type","fileExtension","name","extension","toLowerCase"],"mappings":";;MAAOA,uB;;MACAC,S;;AAEQ,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAAA;;AACzC,MAAIA,IAAI,CAACC,IAAT,EAAe,OAAOD,IAAI,CAACC,IAAZ;AAEf,QAAMC,aAAa,GAAGF,IAAI,CAACG,IAAL,4BAAYN,uBAAuB,CAACG,IAAI,CAACG,IAAN,CAAvB,CAAmCC,SAA/C,qBAAY,sBAA8CC,WAA9C,EAAZ,GAA0E,IAAhG;;AACA,MAAIH,aAAa,IAAIA,aAAa,IAAIJ,SAAtC,EAAiD;AAC/C;AACA,WAAOA,SAAS,CAACI,aAAD,CAAhB;AACD,GAPwC,CAQzC;;;AACA,SAAO,0BAAP;AACD;;iBAVuBH,W","sourcesContent":["import getFileNameAndExtension from './getFileNameAndExtension.js'\nimport mimeTypes from './mimeTypes.js'\n\nexport default function getFileType (file) {\n  if (file.type) return file.type\n\n  const fileExtension = file.name ? getFileNameAndExtension(file.name).extension?.toLowerCase() : null\n  if (fileExtension && fileExtension in mimeTypes) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension]\n  }\n  // if all fails, fall back to a generic byte stream type\n  return 'application/octet-stream'\n}\n"]}