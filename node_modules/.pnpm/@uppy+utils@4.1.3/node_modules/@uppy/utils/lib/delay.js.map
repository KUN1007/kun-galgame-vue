{"version":3,"sources":["delay.js"],"names":["delay","ms","opts","Promise","resolve","reject","signal","aborted","timeout","setTimeout","cleanup","onabort","clearTimeout","addEventListener","removeEventListener","undefined"],"mappings":";;AAAA;;AASe,SAASA,KAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AACvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAAA;;AACtC,QAAIH,IAAJ,4BAAIA,IAAI,CAAEI,MAAV,aAAI,aAAcC,OAAlB,EAA2B;AACzB,aAAOF,MAAM,CAAC,wCAAD,CAAb;AACD;;AAED,UAAMG,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BC,MAAAA,OAAO,GADwB,CACrB;;AACVN,MAAAA,OAAO;AACR,KAHyB,EAGvBH,EAHuB,CAA1B;;AAKA,aAASU,OAAT,GAAoB;AAClBC,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAE,MAAAA,OAAO,GAFW,CAER;;AACVL,MAAAA,MAAM,CAAC,wCAAD,CAAN;AACD;;AACDH,IAAAA,IAAI,QAAJ,6BAAAA,IAAI,CAAEI,MAAN,mCAAcO,gBAAd,CAA+B,OAA/B,EAAwCF,OAAxC;;AACA,aAASD,OAAT,GAAoB;AAAA;;AAClBR,MAAAA,IAAI,QAAJ,6BAAAA,IAAI,CAAEI,MAAN,mCAAcQ,mBAAd,CAAkC,OAAlC,EAA2CH,OAA3C;AACD;;AACD,WAAOI,SAAP;AACD,GApBM,CAAP;AAqBD;;AA7BD;AACA;AACA;AACA;AACA;AACA;AACA;iBACwBf,K","sourcesContent":["import { createAbortError } from './AbortController.js'\n\n/**\n * Return a Promise that resolves after `ms` milliseconds.\n *\n * @param {number} ms - Number of milliseconds to wait.\n * @param {{ signal?: AbortSignal }} [opts] - An abort signal that can be used to cancel the delay early.\n * @returns {Promise<void>} A Promise that resolves after the given amount of `ms`.\n */\nexport default function delay (ms, opts) {\n  return new Promise((resolve, reject) => {\n    if (opts?.signal?.aborted) {\n      return reject(createAbortError())\n    }\n\n    const timeout = setTimeout(() => {\n      cleanup() // eslint-disable-line no-use-before-define\n      resolve()\n    }, ms)\n\n    function onabort () {\n      clearTimeout(timeout)\n      cleanup() // eslint-disable-line no-use-before-define\n      reject(createAbortError())\n    }\n    opts?.signal?.addEventListener('abort', onabort)\n    function cleanup () {\n      opts?.signal?.removeEventListener('abort', onabort)\n    }\n    return undefined\n  })\n}\n"]}