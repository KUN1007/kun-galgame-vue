{"version":3,"sources":["prettyETA.js"],"names":["secondsToTime","prettyETA","seconds","time","hoursStr","hours","minutesStr","minutes","toString","padStart","secondsStr"],"mappings":";;MAAOA,a;;AAEQ,SAASC,SAAT,CAAoBC,OAApB,EAA6B;AAC1C,QAAMC,IAAI,GAAGH,aAAa,CAACE,OAAD,CAA1B,CAD0C,CAG1C;AACA;AACA;;AACA,QAAME,QAAQ,GAAGD,IAAI,CAACE,KAAL,KAAe,CAAf,GAAmB,EAAnB,GAAyB,GAAEF,IAAI,CAACE,KAAM,GAAvD;AACA,QAAMC,UAAU,GAAGH,IAAI,CAACI,OAAL,KAAiB,CAAjB,GAAqB,EAArB,GAA2B,GAAEJ,IAAI,CAACE,KAAL,KAAe,CAAf,GAAmBF,IAAI,CAACI,OAAxB,GAAmC,IAAGJ,IAAI,CAACI,OAAL,CAAaC,QAAb,CAAsB,EAAtB,EAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAA2C,EAAE,GAAnI;AACA,QAAMC,UAAU,GAAGP,IAAI,CAACE,KAAL,KAAe,CAAf,GAAmB,EAAnB,GAAyB,GAAEF,IAAI,CAACI,OAAL,KAAiB,CAAjB,GAAqBJ,IAAI,CAACD,OAA1B,GAAqC,IAAGC,IAAI,CAACD,OAAL,CAAaM,QAAb,CAAsB,EAAtB,EAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAA2C,EAAE,GAAnI;AAEA,SAAQ,GAAEL,QAAS,GAAEE,UAAW,GAAEI,UAAW,EAA7C;AACD;;iBAXuBT,S","sourcesContent":["import secondsToTime from './secondsToTime.js'\n\nexport default function prettyETA (seconds) {\n  const time = secondsToTime(seconds)\n\n  // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n  const hoursStr = time.hours === 0 ? '' : `${time.hours}h`\n  const minutesStr = time.minutes === 0 ? '' : `${time.hours === 0 ? time.minutes : ` ${time.minutes.toString(10).padStart(2, '0')}`}m`\n  const secondsStr = time.hours !== 0 ? '' : `${time.minutes === 0 ? time.seconds : ` ${time.seconds.toString(10).padStart(2, '0')}`}s`\n\n  return `${hoursStr}${minutesStr}${secondsStr}`\n}\n"]}