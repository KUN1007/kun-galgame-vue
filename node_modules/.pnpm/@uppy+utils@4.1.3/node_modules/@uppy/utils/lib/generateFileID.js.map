{"version":3,"sources":["generateFileID.js"],"names":["encodeCharacter","character","charCodeAt","toString","encodeFilename","name","suffix","replace","generateFileID","file","id","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified"],"mappings":";;AAAA,SAASA,eAAT,CAA0BC,SAA1B,EAAqC;AACnC,SAAOA,SAAS,CAACC,UAAV,CAAqB,CAArB,EAAwBC,QAAxB,CAAiC,EAAjC,CAAP;AACD;;AAED,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;AAC7B,MAAIC,MAAM,GAAG,EAAb;AACA,SAAOD,IAAI,CAACE,OAAL,CAAa,aAAb,EAA6BN,SAAD,IAAe;AAChDK,IAAAA,MAAM,IAAK,IAAGN,eAAe,CAACC,SAAD,CAAY,EAAzC;AACA,WAAO,GAAP;AACD,GAHM,IAGFK,MAHL;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASE,cAAT,CAAyBC,IAAzB,EAA+B;AAC5C;AACA;AAEA,MAAIC,EAAE,GAAG,MAAT;;AACA,MAAI,OAAOD,IAAI,CAACJ,IAAZ,KAAqB,QAAzB,EAAmC;AACjCK,IAAAA,EAAE,IAAK,IAAGN,cAAc,CAACK,IAAI,CAACJ,IAAL,CAAUM,WAAV,EAAD,CAA0B,EAAlD;AACD;;AAED,MAAIF,IAAI,CAACG,IAAL,KAAcC,SAAlB,EAA6B;AAC3BH,IAAAA,EAAE,IAAK,IAAGD,IAAI,CAACG,IAAK,EAApB;AACD;;AAED,MAAIH,IAAI,CAACK,IAAL,IAAa,OAAOL,IAAI,CAACK,IAAL,CAAUC,YAAjB,KAAkC,QAAnD,EAA6D;AAC3DL,IAAAA,EAAE,IAAK,IAAGN,cAAc,CAACK,IAAI,CAACK,IAAL,CAAUC,YAAV,CAAuBJ,WAAvB,EAAD,CAAuC,EAA/D;AACD;;AAED,MAAIF,IAAI,CAACO,IAAL,CAAUC,IAAV,KAAmBJ,SAAvB,EAAkC;AAChCH,IAAAA,EAAE,IAAK,IAAGD,IAAI,CAACO,IAAL,CAAUC,IAAK,EAAzB;AACD;;AACD,MAAIR,IAAI,CAACO,IAAL,CAAUE,YAAV,KAA2BL,SAA/B,EAA0C;AACxCH,IAAAA,EAAE,IAAK,IAAGD,IAAI,CAACO,IAAL,CAAUE,YAAa,EAAjC;AACD;;AAED,SAAOR,EAAP;AACD;;iBAzBuBF,c","sourcesContent":["function encodeCharacter (character) {\n  return character.charCodeAt(0).toString(32)\n}\n\nfunction encodeFilename (name) {\n  let suffix = ''\n  return name.replace(/[^A-Z0-9]/ig, (character) => {\n    suffix += `-${encodeCharacter(character)}`\n    return '/'\n  }) + suffix\n}\n\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\nexport default function generateFileID (file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n\n  let id = 'uppy'\n  if (typeof file.name === 'string') {\n    id += `-${encodeFilename(file.name.toLowerCase())}`\n  }\n\n  if (file.type !== undefined) {\n    id += `-${file.type}`\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += `-${encodeFilename(file.meta.relativePath.toLowerCase())}`\n  }\n\n  if (file.data.size !== undefined) {\n    id += `-${file.data.size}`\n  }\n  if (file.data.lastModified !== undefined) {\n    id += `-${file.data.lastModified}`\n  }\n\n  return id\n}\n"]}